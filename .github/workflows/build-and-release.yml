name: Build and Release Netflix Rows Plugin

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        jellyfin-version: ['10.10.7']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      working-directory: ./
      run: dotnet restore --disable-parallel
    
    - name: Build
      working-directory: ./
      run: dotnet build --no-restore --configuration Release --verbosity normal
    
    - name: Test
      working-directory: ./
      run: dotnet test --no-build --verbosity normal --configuration Release || echo "No tests found, continuing..."
    
    - name: Create plugin archive
      run: |
        mkdir -p artifacts
        cd bin/Release/net8.0
        zip -r ../../../artifacts/jellyfin-plugin-netflix-rows-${{ github.ref_name || 'dev' }}.zip .
    
    - name: Calculate checksums
      run: |
        cd artifacts
        
        # Calculate SHA256
        SHA256_CHECKSUM=$(sha256sum jellyfin-plugin-netflix-rows-*.zip | cut -d' ' -f1)
        echo "SHA256_CHECKSUM=$SHA256_CHECKSUM" >> $GITHUB_ENV
        
        # Calculate MD5 (for legacy compatibility)
        MD5_CHECKSUM=$(md5sum jellyfin-plugin-netflix-rows-*.zip | cut -d' ' -f1)
        echo "MD5_CHECKSUM=$MD5_CHECKSUM" >> $GITHUB_ENV
        
        # Save checksums to files
        echo "$SHA256_CHECKSUM" > netflix-rows-${{ github.ref_name || 'dev' }}.sha256
        echo "$MD5_CHECKSUM" > netflix-rows-${{ github.ref_name || 'dev' }}.md5
        
        echo "Calculated checksums:"
        echo "SHA256: $SHA256_CHECKSUM"
        echo "MD5: $MD5_CHECKSUM"
    
    - name: Create repository.json
      run: |
        # Extract version number without 'v' prefix
        RAW_VERSION="${{ github.ref_name || '1.0.0' }}"
        VERSION="${RAW_VERSION#v}"
        TAG_NAME="${{ github.ref_name || 'v1.0.0' }}"
        TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.%fZ)
        
        echo "Creating repository.json with:"
        echo "Version: $VERSION"
        echo "Tag: $TAG_NAME" 
        echo "SHA256 Checksum: $SHA256_CHECKSUM"
        echo "MD5 Checksum: $MD5_CHECKSUM"
        
        cat > artifacts/repository.json << EOF
        [
          {
            "name": "Netflix Rows",
            "description": "Transform your Jellyfin home screen into a Netflix-like experience with dynamic rows, genres, and a custom watchlist.",
            "overview": "Netflix Rows Plugin für Jellyfin - Erstellt eine Netflix-ähnliche Startseite mit dynamischen Rows, Genres und einer benutzerdefinierten Watchlist.",
            "owner": "${{ github.repository_owner }}",
            "category": "General",
            "guid": "12345678-1234-5678-9abc-123456789012",
            "versions": [
              {
                "version": "$VERSION",
                "changelog": "Netflix-style rows with dynamic content organization. Full changelog: https://github.com/${{ github.repository }}/releases/tag/$TAG_NAME",
                "targetAbi": "10.10.7.0",
                "sourceUrl": "https://github.com/${{ github.repository }}/releases/download/$TAG_NAME/jellyfin-plugin-netflix-rows-$RAW_VERSION.zip",
                "checksum": "$SHA256_CHECKSUM",
                "timestamp": "$TIMESTAMP"
              }
            ]
          }
        ]
        EOF
        
        # Create manifest.json (same content)
        cp artifacts/repository.json artifacts/manifest.json
        
        # Copy meta.json if it exists
        if [ -f "meta.json" ]; then
          cp meta.json artifacts/
        fi
        
        echo "=== Final repository.json ==="
        cat artifacts/repository.json
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-artifacts-${{ matrix.jellyfin-version }}
        path: |
          artifacts/*.zip
          artifacts/manifest.json
          artifacts/repository.json
          artifacts/meta.json
          artifacts/*.sha256
          artifacts/*.md5
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/*.zip
          artifacts/repository.json
          artifacts/meta.json
          artifacts/*.sha256
          artifacts/*.md5
        body: |
          ## Netflix Rows Plugin ${{ github.ref_name }}
          
          ### 📦 Download & Checksums
          
          **Main Download:**
          - `jellyfin-plugin-netflix-rows-${{ github.ref_name }}.zip`
          
          **Checksums:**
          - **SHA256:** `${{ env.SHA256_CHECKSUM }}`
          - **MD5:** `${{ env.MD5_CHECKSUM }}`
          
          > **Note:** Always verify the checksum after download to ensure file integrity.
          
          ---
          
          ### ✨ Features
          - 🎬 Netflix-style home screen with dynamic rows
          - 📚 Genre-based content organization
          - ⭐ Custom "My List" functionality using favorites
          - 🔀 Random picks for content discovery
          - 📅 Recently added and long not watched sections
          - ⚙️ Comprehensive admin configuration
          - 🎨 Theme-adaptive design
          - 📱 Responsive mobile support
          - ⚡ Lazy loading for optimal performance
          
          ### 🚀 Installation
          
          #### Method 1: Plugin Repository (Recommended)
          1. Add `https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/repository.json` as a plugin repository in Jellyfin
          2. Install "Netflix Rows" from the plugin catalog
          3. Restart Jellyfin
          4. Configure the plugin in the admin dashboard
          
          #### Method 2: Manual Installation
          1. Download `jellyfin-plugin-netflix-rows-${{ github.ref_name }}.zip`
          2. **Verify checksum:** `sha256sum jellyfin-plugin-netflix-rows-${{ github.ref_name }}.zip`
          3. Expected: `${{ env.SHA256_CHECKSUM }}`
          4. Extract to your Jellyfin plugins directory
          5. Restart Jellyfin
          
          ### 📋 Requirements
          - **Jellyfin:** 10.10.7 or later
          - **File Transformation Plugin:** Required for UI modifications
          - **Home Screen Sections Plugin:** Optional, enhances functionality
          - **Plugin Pages Plugin:** Optional, for advanced features
          
          ### 🔧 Configuration
          After installation, navigate to:
          **Admin Dashboard → Plugins → Netflix Rows → Configuration**
          
          ### ✅ Compatibility
          - ✅ Compatible with all Jellyfin themes
          - ✅ Supports dark/light theme switching
          - ✅ Mobile and desktop responsive
          - ✅ High contrast mode support
          - ✅ Reduced motion preferences
          - ✅ Multiple language support
          
          ### 🐛 Troubleshooting
          
          #### Plugin not working?
          1. Ensure File Transformation plugin is installed and enabled
          2. Check Jellyfin logs for errors: `Admin → Dashboard → Logs`
          3. Clear browser cache and hard refresh (Ctrl+Shift+R)
          4. Test API endpoints: `http://your-server:8096/NetflixRows/Test`
          
          #### Configuration not loading?
          1. Check API endpoint: `http://your-server:8096/NetflixRows/Config`
          2. Verify plugin permissions in Jellyfin admin
          3. Restart Jellyfin server
          
          ### 📚 Documentation
          Full documentation available in the [repository README](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README.md).
          
          ### 🆘 Support
          - 🐛 **Bug Reports:** [GitHub Issues](https://github.com/${{ github.repository }}/issues)
          - 💡 **Feature Requests:** [GitHub Discussions](https://github.com/${{ github.repository }}/discussions)
          - 📖 **Documentation:** [Repository Wiki](https://github.com/${{ github.repository }}/wiki)
          
          ---
          
          **Made with ❤️ for the Jellyfin Community**
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MD5_CHECKSUM: ${{ env.MD5_CHECKSUM }}
        SHA256_CHECKSUM: ${{ env.SHA256_CHECKSUM }}

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      working-directory: ./
      run: dotnet restore
    
    - name: Run tests
      working-directory: ./
      run: dotnet test --verbosity normal || echo "No tests found, continuing..."
    
    - name: Build
      working-directory: ./
      run: dotnet build --configuration Release